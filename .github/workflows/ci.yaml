# An action to push templates to coder server

name: Push templates to coder server

on:
  push:
    branches:
      - main
    paths:
      - '**.tf'
      - '**Dockerfile.*'
  pull_request:
    branches:
      - main
    paths:
      - '**.tf'
      - '**Dockerfile.*'
  workflow_dispatch:

jobs:
  # make a matrix of all templates(sub directories) that have changed files in them
  # this will allow us to run the job for each template that has changed

  # this job will run for each template that has changed
  get_changed_templates:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
      - name: Set matrix
        id: set-matrix
        run: |
          # get all the changed files
          changed_files=$(git diff --name-only HEAD~1 HEAD)
          # get all the templates that have changed files in them
          templates=$(echo "$changed_files" | grep -oP '^.+?(?=/)' | sort -u)
          # create a json array of the templates
          matrix=$(echo "[$(echo "$templates" | sed -e 's/^/"/' -e 's/$/",/' | tr -d ' ' | sed 's/,$//')]")
          echo "::set-output name=matrix::$matrix"

  # Install terraform and validate the templates
  validate:
    needs: get_changed_templates
    runs-on: ubuntu-latest
    strategy:
      matrix: ${{ fromJson(needs.get_changed_templates.outputs.matrix) }}
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
      - name: Install Terraform
        uses: hashicorp/setup-terraform@v2
      - name: Terraform Init
        run: |
          cd ${{ matrix }}
          terraform init
      - name: Terraform Validate
        run: |
          cd ${{ matrix }}
          terraform validate

  # this job will run for each template that has changed
  deploy_template:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: true
      - name: Get short commit SHA
        id: vars
        run: echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"
      - name: "Install latest Coder"
        run: |
          curl -L https://coder.com/install.sh | sh
      - name: "Push template"
        run: |
          coder templates push $CODER_TEMPLATE_NAME --directory $CODER_TEMPLATE_DIR --yes --name=$CODER_TEMPLATE_VERSION
        env:
          # Consumed by Coder CLI
          CODER_URL: https://gpu.ctar.ml
          CODER_SESSION_TOKEN: ${{ secrets.CODER_SESSION_TOKEN }}
          # Template source & details
          CODER_TEMPLATE_NAME: ${{ matrix.template }}
          CODER_TEMPLATE_VERSION: ${{ steps.vars.outputs.sha_short }}
          CODER_TEMPLATE_DIR: ./${{ matrix.template }}
